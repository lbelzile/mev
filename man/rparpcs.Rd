% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expme_rparpcs.R
\name{rparpcs}
\alias{rparpcs}
\title{Simulation from Pareto processes (max) using composition sampling}
\usage{
rparpcs(n, Lambda = NULL, Sigma = NULL, df = NULL, model = c("br",
  "xstud"), xi = 1)
}
\arguments{
\item{n}{sample size}

\item{Lambda}{parameter matrix for the Brown--Resnick model}

\item{Sigma}{correlation matrix if \code{model = "xstud"}, otherwise
the covariance matrix formed from the stationary Brown-Resnick process.}

\item{df}{degrees of freedom for extremal Student process}

\item{model}{string indicating the model family}

\item{xi}{tail index (shape parameter) of the Pareto variate. Must be strictly positive.}
}
\value{
an \code{n} by \code{d} matrix, where \code{d=ncol(Sigma)}
}
\description{
The algorithm performs forward sampling by simulating first from a
mixture, then sample angles conditional on them being less than one.
The resulting sample from the angular distribution is then multiplied by
\eqn{xi}-Frechet variates.
}
\details{
Only extreme value models based on elliptical processes are handled.

The argument \code{Sigma} is ignored for the Brown-Resnick model
if \code{Lambda} is provided by the user.
}
\examples{
\dontrun{
#Brown-Resnick, Wadsworth and Tawn (2014) parametrization
D <- 20L
loc <- cbind(runif(D), runif(D))
di <- as.matrix(dist(rbind(c(0, ncol(loc)), loc)))
semivario <- function(d, alpha = 1.5, lambda = 1){(d/lambda)^alpha}
Vmat <- semivario(di)
Lambda <- Vmat[-1,-1]/2
rparpcs(n = 10, Lambda = Lambda, model = "br", xi = 0.1)
Sigma <- outer(Vmat[-1, 1], Vmat[1, -1], "+") - Vmat[-1, -1]
rparpcs(n = 10, Sigma = Sigma, model = "br", xi = 0.1)
#Extremal Student
Sigma <- stats::rWishart(n = 1, df = 20, Sigma = diag(10))[,,1]
rparpcs(n = 10, Sigma = cov2cor(Sigma), df = 3, model = "xstud")

N <- 1e5
plot(table(apply(mvtnorm::rmvnorm(n = N, sigma = Sigma), 1, which.max)), ylab = "Counts")
weights <- weightsBR_WT(z = rep(1, D), Sigma = Sigma)
weights <- weights / sum(weights)
matplot(1:D, cbind(N*weights,
 N*weights- 1.96* sqrt(N*weights*1-weights),
 N*weights + 1.96* sqrt(N*weights*1-weights)), col = rep(2,3),
   type = "p", pch = c(20,1,1), add = TRUE)
}
}
\author{
Leo Belzile
}
